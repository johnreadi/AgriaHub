# Dockerfile pour Backend PHP - AGRIA Hub Production
FROM php:8.2-fpm-alpine

# Installer les dépendances système
RUN apk add --no-cache \
    nginx \
    mysql-client \
    supervisor \
    curl \
    zip \
    unzip \
    git \
    && docker-php-ext-install \
    pdo \
    pdo_mysql \
    mysqli \
    opcache

# Installer Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Configuration PHP optimisée pour production
RUN echo "opcache.enable=1" >> /usr/local/etc/php/conf.d/opcache.ini && \
    echo "opcache.memory_consumption=128" >> /usr/local/etc/php/conf.d/opcache.ini && \
    echo "opcache.interned_strings_buffer=8" >> /usr/local/etc/php/conf.d/opcache.ini && \
    echo "opcache.max_accelerated_files=4000" >> /usr/local/etc/php/conf.d/opcache.ini && \
    echo "opcache.revalidate_freq=2" >> /usr/local/etc/php/conf.d/opcache.ini && \
    echo "opcache.fast_shutdown=1" >> /usr/local/etc/php/conf.d/opcache.ini && \
    echo "upload_max_filesize = 50M" >> /usr/local/etc/php/conf.d/uploads.ini && \
    echo "post_max_size = 50M" >> /usr/local/etc/php/conf.d/uploads.ini && \
    echo "max_execution_time = 300" >> /usr/local/etc/php/conf.d/uploads.ini && \
    echo "memory_limit = 256M" >> /usr/local/etc/php/conf.d/uploads.ini && \
    echo "max_input_vars = 3000" >> /usr/local/etc/php/conf.d/uploads.ini

# Configuration Nginx pour PHP
COPY config/nginx-backend.conf /etc/nginx/nginx.conf

# Configuration Supervisor
COPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Créer un utilisateur non-root
RUN addgroup -g 1001 -S appuser && \
    adduser -S -D -H -u 1001 -h /var/www -s /sbin/nologin -G appuser -g appuser appuser

# Créer les répertoires nécessaires
RUN mkdir -p /var/www/html/api/logs \
    && mkdir -p /var/www/html/api/uploads \
    && mkdir -p /var/www/html/api/cache \
    && mkdir -p /var/log/supervisor \
    && mkdir -p /var/run/php \
    && chown -R appuser:appuser /var/www/html \
    && chown -R appuser:appuser /var/log/supervisor \
    && chown -R appuser:appuser /var/run/php \
    && chmod -R 755 /var/www/html

# Copier le code PHP
COPY --chown=appuser:appuser backend/ /var/www/html/

# Variables d'environnement par défaut
ENV PHP_ENV=production
ENV DB_HOST=database
ENV DB_NAME=agria_production
ENV DB_USER=agria_user

# Exposer le port
EXPOSE 9000

# Healthcheck amélioré
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:9000/api/auth.php?action=ping || exit 1

# Script de démarrage
COPY scripts/start-backend.sh /start-backend.sh
RUN chmod +x /start-backend.sh

# Utiliser l'utilisateur non-root
USER appuser

# Démarrer via le script
CMD ["/start-backend.sh"]