# Dockerfile pour Backend PHP - AGRIA
FROM php:8.1-fpm-alpine

# Installer les dépendances système
RUN apk add --no-cache \
    nginx \
    mysql-client \
    supervisor \
    curl \
    && docker-php-ext-install \
    pdo \
    pdo_mysql \
    mysqli

# Installer Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Configuration PHP optimisée
RUN echo "upload_max_filesize = 50M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "post_max_size = 50M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "max_execution_time = 300" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "memory_limit = 256M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "max_input_vars = 3000" >> /usr/local/etc/php/conf.d/uploads.ini

# Configuration Nginx pour PHP
COPY nginx-backend.conf /etc/nginx/nginx.conf

# Configuration Supervisor
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Créer les répertoires nécessaires
RUN mkdir -p /var/www/html/api/logs \
    && mkdir -p /var/www/html/api/uploads \
    && mkdir -p /var/log/supervisor \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html

# Copier le code PHP
COPY . /var/www/html/

# Variables d'environnement par défaut
ENV PHP_ENV=production
ENV DB_HOST=database
ENV DB_NAME=agria_production
ENV DB_USER=agria_user

# Exposer le port
EXPOSE 80

# Healthcheck amélioré
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

# Démarrer Supervisor (qui gère PHP-FPM et Nginx)
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
CMD ["/start-backend.sh"]